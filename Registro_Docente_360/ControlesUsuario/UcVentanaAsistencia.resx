<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVolver.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA3NJREFUeF7tmjtv1EAQx4eHIEg8eh5fIEBBQ0MBRDwq3kqH6Hg0FCkQUjxzs3tQ
        AEqAFAEUAgUlEnybAAUdj4aHhHgLoqDZQ1fM3hn7vGtf0P6kv3SS7Zmxb707s2OARCKRSCQSiUSiHphH
        oI07gbMDYOmYk/xm3uGO/XfMXFwLlk6ApXtg6AVYXARLS72Fi+4cg3eB8Tgwr9Hmlg9Xsm1g8BZY/ODf
        aFG5a28C81Ztfni5dnkTGJwBiz/9GxpUzpY8iI3a3XBh6TAYeuvfQCjhG7B0ULttniVYAZba+e93KMk8
        gex8DgWPx1eBxYd+oLGF8853o7h/Huf94OoSPmp2JLhhr4OqXS0dVj1wNgaGfvcIqGbhInB2SIcXF1mO
        os72JWXoNVy/tEGHGQ9Lt70gmpbBaR1mHCQrC5rkBJKhH3B1cosONzyV/33JFXABDL30j1VU9FHgCptK
        uf07sLS3a8/SKbD4yz9vQBl6H7eA6lR1vuMiMvQR2rhLmwyeRzAe1S7CISWtdlhI+Al4crc25zA44Z9f
        SXe0i3C4et5z+A/hZ7C0R5vqYvCpf00FGXqmXYRhemJd6WLH0DewtF+b6tLGM941VSXJmcxVwZFtLO0s
        T7IsSXncDylkGE+CbY33VRtPg8W50hlnG7drd9WR1Fc7ypNpndUmBsZk5z37+eo/6gams4GpHfWWoS/A
        vFKbGBgZLWJT++mnKCtBmQdg8WvQWp159d/5pIevHoryAMq+Am06p00MjKULnv18RXgFmpsE50uvPnEm
        QR4pHch/tQwKMRIhS0/8a6oIF7SLcEjHxnNYRDWmwgZntYtwSLtKOyyqfsWQoQfeudV0RLsIh5SaVcth
        zvZ17YUuh539mOWw4Pp92nEZuQ2R51E2RCxN6XDDI1tinSVOO29WtW2JCdKo1AE0rxs6zHjItninUamD
        aEj4CpjX6zDjIglO2TI1ilxy1lDHWLq0XkC1C3VY9SGNSUP3ewRVk3BOh1Q/nfZ42J3dQsK5oCV3JTof
        SLRKF0uDqDPvNDjs85DP3aRRqYMOJpntszHtdriQLq1kZEGTJfzu1vnal7oqSFYmvTppV3k3VFSulTYF
        zJu1+eWDFCeyRydlqjQt8nIHOebOwVlX1UUvbJpAdmuYR927LA/GSX7zaLydnEQikUgkEolEQvMHFZNJ
        ELhTYMcAAAAASUVORK5CYII=
</value>
  </data>
</root>